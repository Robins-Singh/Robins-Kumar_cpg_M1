SQL Lab Book

1.1: Data Query Language
------------------------------------

1. select first_name as Name,department_id as Id from employees where hire_date<'01-JAN-2003' and salary between 12000 and 25000;
2. select employee_id,first_name,department_id,TRUNC(MONTHS_BETWEEN(sysdate, hire_date)/12) as Exp from employees where Exp>=18 order by Exp;
3. select first_name from employees where manager_id is null;
4. select Book_name, Book_pub_year as Year from Book_Master where Year between 2001 and 2004;
   select Book_name from Book_Master where Book_name like '%&%;
5. select Staff_name from Staff_master where Staff_name like '%_%';

2.1: Single Row Functions:
------------------------------------

1. select first_name,lpad(salary,15,'$') from employees;
2. select first_name,to_char(sysdate,'MONTH,D YYYY') as DOB from employees where (to_char(sysdate,'DAY') in ('SATURDAY','SUNDAY'));
3. select first_name || ' ' || last_name "Name",round(months_between(sysdate,hire_date)) "Months Worked" from employees order by "Months Worked";
4. select * from employees where extract(day from hire_date)>=1 and extract(day from hire_date)<=15 and extract(month from hire_date)=12;
5. SELECT last_name,salary,
    CASE WHEN salary >= 50000 THEN 'A'
         WHEN salary>=25000 and salary<50000 THEN 'B'
	 WHEN salary>=10000 and salary<25000 THEN 'C'
         ELSE 'D' END AS GRADE FROM employees;

6. select first_name || ' ' || last_name "Name", hire_date, to_char(hire_date,'DY') as Day from employees order by mod(TO_CHAR(hire_date,'D')+5,7);
  or
   select first_name || ' ' || last_name "Name", hire_date, to_char(hire_date,'DY') as Day from employees order by (hire_date - next_day(hire_date, 'MONDAY'));

7. SELECT INSTR(â€˜Mississippi','i',1,3)FROM dual;  // 1 is starting index and 3 is nth occurence
8. select as PayDate from dual;
9. select student_code,student_name,decode(dept_code,20,'ELectricals',30,'Electronics','Others') department_name from studentmaster;

2.2 Group Functions:
---------------------------------------

1. select round(avg(salary)) as Average, round(max(salary)) as Maximum, round(min(salary)) as Minimum from employees;
2. select department_id,count(manager_id) from departments group by department_id;
3.

3.1: Joins and Subqueries
--------------------------------------
1. select s.staff_name,d.dept_code,d.dept_name,s.staff_sal from staffmaster s,department_master d where s.dept_code=d.dept_code and staff_sal>20000;
2. select s.staff_code as staff# , s.staff_name as staff,d.dept_name,s.mgr_code as mgr# from staffmaster s, department_master d where s.dept_code=d.dept_code;
3. select s.student_code,s.student_name,b.book_code,bb.book_name from studentmaster s,book_transactions b, book_master bb where s.student_code=b.student_code and to_char(b.book_expected_return_date,'dd mm yyyy')  like to_char(sysdate,'dd mm yyyy');
4. select s.staff_code,s.staff_name,d.dept_name,f.design_name,g.book_name,h.book_issue_date from staffmaster s,department_master d,designation-master f,book_master f,book_issue_date h where months_between(to_char(h.book_issue_date,'mm'),to_char(sysdate,'mm'))<1;
5. 
6. select staff_code, staff_name,staff_sal  from staffmaster where staff_sal<(select avg(staff_sal) from staffmaster);
7. select author,book_name from book_master group by authorname having count(author)>1;
8. select s.staff_code,d.staff_name,d.dept_name from staffmaster s,book_transactions d group by s.staff_name having count(d.staff_name)>1;
9. select s.student_code,s.student_name,d.dept_name from staffmaster s,department_master d group by s.dept_code having max(s.dept_code);
10. select s.staff_code,s.staff_name,d.dept_name,f.design_name from staffmaster s, department_master d,designation_master f where months_between(to_char(hiredate,'mm') ,to_char(sysdate,'mm'))<3;
11. 
12.
13. select dept_code,dept_name,count(s.staff_name) as numberofpeople from staffmaster s,department_master d group by dept_code;

4.1: Database Objects 
--------------------------------------

1. create table customer(customerid number(5),cust_name varchar2(20),address1 varchar2(20),address2 varchar2(20));
2. alter table customer rename column cust_name to customername;
   alter table customer modify customername not null;
3. alter table customer add (gender varchar2(1), age number(3), phoneno number(10));
4. rename customer to cust_table;
5. alter table cust_table add constraint Custld_Prim primary key(customerid);
6. Error due to primary key enable in customerid
7. alter table cust_table disable constraint Custld_Prim;
8. Error enabling primary key again,due to violation
9. alter table cust_table drop constraint Custld_Prim;
10.truncate table cust_table;
11.alter table cust_table add e_mail varchar2(30);
12.alter table cust_table drop column e_mail;
13.create table supplier as (select customerid as SuppID,customername as SName,address1 as Addr1,address2 as Addr2,phoneno as Contactno from cust_table);
14.drop table supplier;
   create table customermaster(customerid number(5),customername varchar2(30) not null ,address1 varchar2(30) not null,address2 varchar2(30) not null,gender varchar2(1),age number(3),phoneno number(10),constraint CustId_PK primary key(customerid));
15.create sequence seq increment by 1;
   create table accountsmaster(customerid number(5),accountnumber number(10,2),accounttype char(3),ledgerbalance number(10,2) not null,constraint "Acc_PK" primary key (accountnumber));
16. alter table accountsmaster add foreign key(customerid) references customermaster(customerid);
17. insert into customermaster values(1000,'Allen','#115 Chicago','#115 Chicago','M', 25, 7878776); 
    insert into customermaster values(1001, 'George', '#116 France', '#116 France', 'M', 25, 434524 ); 
    insert into customermaster values(1002, 'Becker', '#114 New York', '#114 New York', 'M', 45, 431525 ); 
18. alter table accountsmaster add check(accounttype in('NRI','IND'));
19. alter table accountsmaster add constraint Balance_Check check(ledgerbalance>=5000);
20. delete from Accountmaster,customertable where customerid = 1001;
21. create table accountdetails as select * from accountsmaster;
22. create view acct_view as (select c.customerid as customercode, c.customername as accountholdername, a.accountnumber as accountnumber, a.accounttype as type,a.LedgerBalance as Balance from accountsmaster a inner join customermaster c on a.customerid=c.customerid);
23. create view vAccs_Dtls as (select accounttype,ledgerbalance from accountsmaster where accounttype='IND' and ledgerbalance>=10000);
24.
25. create sequence seq_dept start with 40 maxvalue 200 increment by 10;
26. insert into dept values(seq_dept.nextval,'jatin');
    insert into dept values(seq_dept.nextval,'sashwat');
    insert into dept values(seq_dept.nextval,'sachin');
27. drop sequence seq_dept;
28. create index no_name on emp(empno);
    select * from emp;
29. create synonym synemp for emp;
30. select * from synemp;
31. create index IDX_EMP_HIREDATE on emp(HIREDATE);
32. create sequence SEQ_EMP minvalue 1001 start with 1001 increment by 1 cache 1001; 

5.1: Data Manipulation Language
-----------------------------------

1. Create table employee as select * from emp where 1=3 ;
2. insert into employee(empid,empname,deptno,salary) select empid,empname,deptno,salary from emp;
3. update emp set job = (select job from emp where empid=101),deptno = (select deptno from emp where empid=101) where empid=103;
4. delete from employee where job='SALES';
5. update table employee set deptno=(select deptno from employee where deptno=7788) where deptno=7698;
6. insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1000,Allen, Clerk,1001,12-jan-01, 3000, 2,10);
   insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1001,George, analyst, null, 08 Sep 92, 5000,0, 10);
   insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1002, Becker, Manager, 1000, 4 Nov 92, 2800,4, 20);
   insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1003, 'Bill', Clerk, 1002, 4 Nov 92,3000, 0, 20);

6.1: Transaction Control Language Statements
---------------------------------------------

1. insert into customermaster values (  6000, 'John', '#115 Chicago', '#115 Chicago', 'M', 25, 7878776);
   insert into customermaster values (  6001, 'Jack', '#116 France', '#116 France', 'M', 25, 434524);
   insert into customermaster values (  6002, 'James', '#114 New York', '#114 New York', 'M', 45, 431525);
2. savepoint sp1;
3. insert into customermaster values (  6003, 'John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525);
4. rollback to savepoint sp1;
   commit;







